@using CormSquareSupportHub.ViewModels
@model TemplateViewModel

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient text-center py-3">
        <h2 class="text-white">Create New Solution</h2>
    </div>

    <div class="card-body p-4">
        <form method="post" enctype="multipart/form-data">
            <h4>@Model.TemplateName</h4>

            <div id="dynamicFields"></div>

            @if (Model.AllowAttachments)
            {
                <div class="form-group">
                    <label>Attach Documents:</label>
                    <input type="file" name="Attachments" multiple class="form-control">
                </div>
            }

            @if (Model.AllowReferenceLinks)
            {
                <div class="form-group">
                    <label>Reference Links (Comma Separated)</label>
                    <input type="text" name="ReferenceLinks" class="form-control">
                </div>
            }

            <button type="submit" class="btn btn-primary mt-3">Submit Solution</button>
        </form>
    </div>
</div>

<!-- TinyMCE Setup -->
<script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    const template = @Html.Raw(Json.Serialize(Model.TemplateJson));

    function loadTemplate() {
        let container = document.getElementById("dynamicFields");

        template.fields.forEach(field => {
            let div = document.createElement("div");
            div.className = "form-group";

            let label = document.createElement("label");
            label.innerText = field.label;
            div.appendChild(label);

            let textarea = document.createElement("textarea");
            textarea.className = "form-control tinymce-editor";
            textarea.name = field.label;
            div.appendChild(textarea);
            container.appendChild(div);
        });

        // Initialize TinyMCE for dynamically added textareas
        setTimeout(() => {
            tinymce.init({
                selector: '.tinymce-editor',
                plugins: 'image link lists advlist media table code',
                toolbar: 'undo redo | bold italic underline | alignleft aligncenter alignright | bullist numlist | link image media | code',
                height: 400
            });
        }, 500);
    }

    window.onload = loadTemplate;
</script>
