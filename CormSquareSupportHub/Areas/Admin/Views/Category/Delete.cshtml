@model SupportHub.Models.Category
@{
    ViewData["Title"] = "Delete Category";
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="py-2">Delete Category</h2>
            </div>
        </div>
    </div>

    <div class="container mb-5 pb-5">
        <div class="card-body p-4">
            <form method="post" asp-action="Delete" class="delete-category-form">
                <input type="hidden" asp-for="Id" />

                <!-- Category Name -->
                <div class="mb-3 row p-1">
                    <label asp-for="Name"></label>
                    <input asp-for="Name" class="form-control" disabled />
                </div>

                <!-- Description -->
                <div class="mb-3 row p-1">
                    <label>Description</label>
                    <textarea asp-for="Description" class="form-control" disabled></textarea>
                </div>

                <!-- Parent Category Dropdown -->
                <div class="mb-3 row p-1">
                    <label>Select Parent Category</label>
                    <select asp-for="ParentCategoryId" class="form-control" disabled>
                        <option value="0">This is a Parent Category</option>
                        @foreach (var category in Model.Categories.Where(c => c.ParentCategoryId == null))
                        {
                            <option value="@category.Id" selected="@(Model.ParentCategoryId == category.Id)">
                                @category.Name
                            </option>
                        }
                    </select>
                </div>

                <!-- Template Section -->
                <div class="mb-3 p-1">
                    <label>Template</label>
                    <div class="content-container template-box">@Html.Raw(Model.HtmlContent)</div>
                </div>

                <!-- Attachments Section -->
                <div class="mb-3">
                    <h5>Attachments List</h5>
                    @if (Model.Attachments.Any(a => !a.IsDeleted))
                    {
                        <ul id="attachmentList" class="list-group mt-2">
                            @foreach (var attachment in Model.Attachments.Where(a => !a.IsDeleted))
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center" data-attachment-id="@attachment.Id">
                                    <div>
                                        <a href="@Url.Action("DownloadAttachment", "Category", new { attachmentId = attachment.Id, area = "Admin" })"
                                           download="@attachment.FileName"
                                           class="text-decoration-underline">@attachment.FileName</a><br />
                                        <input type="text" class="form-control mt-1" value="@attachment.Caption" disabled />
                                    </div>
                                    <div>
                                        <input type="checkbox" class="form-check-input" @(attachment.IsInternal ? "checked" : "") disabled />
                                        <span>Internal</span>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p>No Attachments</p>
                    }
                </div>

                <!-- References Section -->
                <div class="mb-3">
                    <h5>References List</h5>
                    @if (Model.References.Any(r => !r.IsDeleted))
                    {
                        <ul id="referenceList" class="list-group mt-2">
                            @foreach (var reference in Model.References.Where(r => !r.IsDeleted))
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <a href="@reference.Url" target="@reference.OpenOption" class="reference-link">@reference.Url</a><br />
                                        <input type="text" class="form-control mt-1" value="@reference.Description" disabled />
                                    </div>
                                    <div>
                                        <input type="checkbox" class="form-check-input" @(reference.IsInternal ? "checked" : "") disabled />
                                        <span>Internal</span>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p>No References</p>
                    }
                </div>

                <!-- Buttons -->
                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary mx-2" style="width:200px">
                        <i class="bi bi-trash"></i> Confirm Delete
                    </button>
                    <button type="button" id="cancelButton" class="btn btn-outline-secondary mx-2" style="width:200px">
                        <i class="bi bi-arrow-left-circle"></i> Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="mb-5 pb-5"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/code-block-copy.js"></script>
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />
    <link rel="stylesheet" href="~/css/code-block-copy.css" />

    <style>
        .template-box {
            border: 1px solid #ECEEEF; /* Matches Bootstrap's disabled input border */
            border-radius: 0.25rem; /* Matches Bootstrap's form-control border-radius */
            padding: 15px; /* Inner spacing for content */
            background-color: #ECEEEF;
        }
    </style>

    <script>
        console.log("Script starting: delete-category inline");

        (function () {
            try {
                // Form submission handler for Confirm Delete
                jQuery(document).on('submit', '.delete-category-form', function (e) {
                    e.preventDefault();
                    const form = jQuery(this);
                    const categoryId = form.find('input[name="Id"]').val();
                    if (!categoryId) {
                        console.error('Delete form: Category ID not found');
                        return;
                    }

                    console.log('Delete form submitted for category ID:', categoryId);

                    jQuery.ajax({
                        url: form.attr('action'),
                        type: form.attr('method'),
                        data: form.serialize(),
                        success: function (response) {
                            console.log('Delete response:', response);
                            if (response.success) {
                                window.location.href = response.redirectUrl;
                            } else {
                                toastr.error(response.message || 'Failed to delete category.');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error deleting category:', error, xhr.responseText);
                        }
                    });
                });
                console.log('Delete form handler registered successfully');

                // Cancel button handler
                jQuery('#cancelButton').on('click', function (e) {
                    e.preventDefault(); // Prevent any default behavior
                    e.stopPropagation(); // Stop event bubbling
                    console.log('Cancel button clicked');
                    window.location.href = '@Url.Action("Index", "Category")'; // Redirect to Index
                });
                console.log('Cancel button handler registered successfully');
            } catch (err) {
                console.error('Error in script:', err);
            }
        })();
    </script>
}