@model ProductViewModel
@{
    ViewData["Title"] = "Create New Product";
}

<h2 class="mb-3">Add Product</h2>

<div class="card shadow-sm p-4">
    <form asp-action="Create" method="post">
        <div class="mb-3">
            <label class="form-label">Product Name:</label>
            <input asp-for="ProductName" class="form-control" required />
            <span asp-validation-for="ProductName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Code (2-digit number):</label>
            <input asp-for="Code" class="form-control" required />
            <span asp-validation-for="Code" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Description:</label>
            <textarea asp-for="Description" class="form-control"></textarea>
        </div>

        <div class="mb-3">
            <label class="form-label">Subcategories:</label>
            <div class="input-group">
                <input type="text" id="subCategoryInput" class="form-control" placeholder="Enter subcategory">
                <button type="button" class="btn btn-success" onclick="addSubcategory()">
                    <i class="fas fa-plus"></i> Add
                </button>
            </div>
        </div>

        <table class="table table-bordered mt-3" id="subCategoryTable" style="display: none;">
            <thead class="table-dark">
                <tr>
                    <th>Subcategory Name</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>

        <input type="hidden" asp-for="SubCategoryNames" id="subCategoryHidden" />

        <button type="submit" class="btn btn-primary mt-3">
            <i class="fas fa-save"></i> Create Product
        </button>
    </form>
</div>
<div class="mb-5 pb-5"></div>
<div style="min-height: 100px;"></div>

<script>
    var subcategories = [];

    function addSubcategory() {
        var input = document.getElementById("subCategoryInput");
        var value = input.value.trim();

        if (value && !subcategories.includes(value)) {
            subcategories.push(value);
            updateSubcategoryTable();
            input.value = "";
        }
    }

    function removeSubcategory(sub) {
        subcategories = subcategories.filter(s => s !== sub);
        updateSubcategoryTable();
    }

    function updateSubcategoryTable() {
        var table = document.getElementById("subCategoryTable");
        var tbody = table.querySelector("tbody");

        tbody.innerHTML = "";
        subcategories.forEach(sub => {
            var row = `<tr>
                            <td>${sub}</td>
                            <td>
                                <button type="button" class="btn btn-danger btn-sm" onclick="removeSubcategory('${sub}')">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </td>
                          </tr>`;
            tbody.innerHTML += row;
        });

        document.getElementById("subCategoryHidden").value = JSON.stringify(subcategories);
        table.style.display = subcategories.length > 0 ? "table" : "none";
    }
</script>